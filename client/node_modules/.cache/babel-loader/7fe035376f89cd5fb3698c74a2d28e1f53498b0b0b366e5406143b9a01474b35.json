{"ast":null,"code":"var _jsxFileName = \"/home/lazutlivera/musicapp/client/src/components/YouTubeInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { processYouTubeUrl } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YouTubeInput = ({\n  setAudioUrl,\n  setLoading,\n  setError\n}) => {\n  _s();\n  const [url, setUrl] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      const audioUrl = await processYouTubeUrl(url);\n      setAudioUrl(audioUrl);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      value: url,\n      onChange: e => setUrl(e.target.value),\n      placeholder: \"Enter YouTube URL\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(YouTubeInput, \"ZV/BRor2ecoM1gSD+06O4c7I8qc=\");\n_c = YouTubeInput;\nconst Form = styled.form`\n  display: flex;\n  gap: 1rem;\n  margin: 2rem 0;\n`;\n_c2 = Form;\nconst Input = styled.input`\n  flex: 1;\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n`;\n_c3 = Input;\nconst Button = styled.button`\n  padding: 0.75rem 1.5rem;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1rem;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n_c4 = Button;\nexport default YouTubeInput;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"YouTubeInput\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"Button\");","map":{"version":3,"names":["React","useState","styled","processYouTubeUrl","jsxDEV","_jsxDEV","YouTubeInput","setAudioUrl","setLoading","setError","_s","url","setUrl","handleSubmit","e","preventDefault","audioUrl","error","message","Form","onSubmit","children","Input","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","Button","_c","form","_c2","input","_c3","button","_c4","$RefreshReg$"],"sources":["/home/lazutlivera/musicapp/client/src/components/YouTubeInput.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { processYouTubeUrl } from '../services/api';\n\nconst YouTubeInput = ({ setAudioUrl, setLoading, setError }) => {\n  const [url, setUrl] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const audioUrl = await processYouTubeUrl(url);\n      setAudioUrl(audioUrl);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        value={url}\n        onChange={(e) => setUrl(e.target.value)}\n        placeholder=\"Enter YouTube URL\"\n        required\n      />\n      <Button type=\"submit\">Convert</Button>\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  display: flex;\n  gap: 1rem;\n  margin: 2rem 0;\n`;\n\nconst Input = styled.input`\n  flex: 1;\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n`;\n\nconst Button = styled.button`\n  padding: 0.75rem 1.5rem;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1rem;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n\nexport default YouTubeInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,iBAAiB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,WAAW;EAAEC,UAAU;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,UAAU,CAAC,IAAI,CAAC;IAChBC,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMb,iBAAiB,CAACQ,GAAG,CAAC;MAC7CJ,WAAW,CAACS,QAAQ,CAAC;IACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdR,QAAQ,CAACQ,KAAK,CAACC,OAAO,CAAC;IACzB,CAAC,SAAS;MACRV,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEH,OAAA,CAACc,IAAI;IAACC,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBAC3BhB,OAAA,CAACiB,KAAK;MACJC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEb,GAAI;MACXc,QAAQ,EAAGX,CAAC,IAAKF,MAAM,CAACE,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;MACxCG,WAAW,EAAC,mBAAmB;MAC/BC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF3B,OAAA,CAAC4B,MAAM;MAACV,IAAI,EAAC,QAAQ;MAAAF,QAAA,EAAC;IAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEX,CAAC;AAACtB,EAAA,CA9BIJ,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAgClB,MAAMa,IAAI,GAAGjB,MAAM,CAACiC,IAAI;AACxB;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIjB,IAAI;AAMV,MAAMG,KAAK,GAAGpB,MAAM,CAACmC,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GANIhB,KAAK;AAQX,MAAMW,MAAM,GAAG/B,MAAM,CAACqC,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAZIP,MAAM;AAcZ,eAAe3B,YAAY;AAAC,IAAA4B,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}